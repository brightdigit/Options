#if !canImport(ObjectiveC)
import XCTest

extension ArrayTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ArrayTests = [
        ("testIfNil", testIfNil),
    ]
}

extension DescribedEnumTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DescribedEnumTests = [
        ("testDecoder", testDecoder),
        ("testEncoder", testEncoder),
    ]
}

extension EnumSetTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EnumSetTests = [
        ("testAsEnums", testAsEnums),
        ("testDecoder", testDecoder),
        ("testEncoder", testEncoder),
        ("testInitValues", testInitValues),
    ]
}

extension OptionsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__OptionsTests = [
        ("testExample", testExample),
    ]
}

extension StringCollectionRepresentedTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringCollectionRepresentedTests = [
        ("testRawValue", testRawValue),
        ("testString", testString),
    ]
}

extension StringRepresentableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringRepresentableTests = [
        ("testStringValue", testStringValue),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(ArrayTests.__allTests__ArrayTests),
        testCase(DescribedEnumTests.__allTests__DescribedEnumTests),
        testCase(EnumSetTests.__allTests__EnumSetTests),
        testCase(OptionsTests.__allTests__OptionsTests),
        testCase(StringCollectionRepresentedTests.__allTests__StringCollectionRepresentedTests),
        testCase(StringRepresentableTests.__allTests__StringRepresentableTests),
    ]
}
#endif
